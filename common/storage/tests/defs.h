/*
 * Copyright (c) 2018 IOTA Stiftung
 * https://github.com/iotaledger/entangled
 *
 * Refer to the LICENSE file for licensing information
 */

#ifndef __COMMON_STORAGE_TESTS_HELPERS_H__
#define __COMMON_STORAGE_TESTS_HELPERS_H__

#ifdef __cplusplus
extern "C" {
#endif

uint64_t TEST_MS_INDEX = 42424242;

tryte_t const * const TEST_TX_TRYTES =
    (tryte_t *)"99999999999999999999999999999999999999999999999999999999999999999999999999"
    "99999999999999999999999999999999999999999999999999999999999999999999999999"
    "99999999999999999999999999999999999999999999999999999999999999999999999999"
    "99999999999999999999999999999999999999999999999999999999999999999999999999"
    "99999999999999999999999999999999999999999999999999999999999999999999999999"
    "99999999999999999999999999999999999999999999999999999999999999999999999999"
    "99999999999999999999999999999999999999999999999999999999999999999999999999"
    "99999999999999999999999999999999999999999999999999999999999999999999999999"
    "99999999999999999999999999999999999999999999999999999999999999999999999999"
    "99999999999999999999999999999999999999999999999999999999999999999999999999"
    "99999999999999999999999999999999999999999999999999999999999999999999999999"
    "99999999999999999999999999999999999999999999999999999999999999999999999999"
    "99999999999999999999999999999999999999999999999999999999999999999999999999"
    "99999999999999999999999999999999999999999999999999999999999999999999999999"
    "99999999999999999999999999999999999999999999999999999999999999999999999999"
    "99999999999999999999999999999999999999999999999999999999999999999999999999"
    "99999999999999999999999999999999999999999999999999999999999999999999999999"
    "99999999999999999999999999999999999999999999999999999999999999999999999999"
    "99999999999999999999999999999999999999999999999999999999999999999999999999"
    "99999999999999999999999999999999999999999999999999999999999999999999999999"
    "99999999999999999999999999999999999999999999999999999999999999999999999999"
    "99999999999999999999999999999999999999999999999999999999999999999999999999"
    "99999999999999999999999999999999999999999999999999999999999999999999999999"
    "99999999999999999999999999999999999999999999999999999999999999999999999999"
    "99999999999999999999999999999999999999999999999999999999999999999999999999"
    "99999999999999999999999999999999999999999999999999999999999999999999999999"
    "99999999999999999999999999999999999999999999999999999999999999999999999999"
    "99999999999999999999999999999999999999999999999999999999999999999999999999"
    "99999999999999999999999999999999999999999999999999999999999999999999999999"
    "99999999999999999999999999999999999999999BFVRVBTBVCMKXCLDUZDFWQWYCGHPJATRY"
    "FDLIPVPFLFYTWGRUUOIWXXHOEKBLZGPFBICLNGEMEUPKCSCWOEXNOXD9999999999999999999"
    "9IYINITY99999999999999999999KGVWCZD99999999999C99999999XPXXGCKFSPJB9NKPQEF"
    "VEIRCTLEOZJRCQHJNLJRHXKAAWIFUBUVQZKBNFVYPLSLERDZOYSEJCGIRH9NLBLPFADGOKKAJ9"
    "GVEGJMJ9JPDTKLHTGKZEHHPZP9AOIWWU9VDTPDWGDKTSMDBMXYFMFHVPGUJPQPRKZ9999EMGRZ"
    "G9SXUO9LIBCHKOOSCTZFNIHRICNUSRXADAQWKCGWKGFXNLXDLKQMIEDLAWHTSXDOQZPDIFPZ99"
    "99TRINITY99999999999999999999HKQOKWYLE999999999MMMMMMMMMCZUGNKPECUPYMONRJW"
    "P9UEXXB9W";

#if defined(FLEX_TRIT_ENCODING_1_TRIT_PER_BYTE)
const flex_trit_t TEST_TX_HASH[] = {
    -1, -1, 1,  0,  -1, -1, 0,  -1, -1, 1,  1,  0,  0,  1,  0,  1,  -1, -1, -1, 1,  1,  0,  0,  0,  -1, 0,  1,
    1,  -1, -1, 1,  1,  0,  1,  1,  1,  0,  -1, -1, 1,  -1, 0,  -1, -1, 0,  1,  -1, 0,  0,  0,  -1, -1, 0,  0,
    1,  0,  -1, 0,  0,  0,  1,  0,  -1, 1,  -1, 0,  0,  1,  1,  0,  0,  1,  -1, -1, 1,  -1, 0,  0,  0,  0,  1,
    -1, -1, 1,  -1, 1,  -1, 1,  1,  -1, -1, 0,  -1, -1, 1,  0,  1,  0,  1,  0,  0,  1,  0,  1,  0,  -1, 0,  -1,
    1,  0,  1,  -1, 1,  1,  1,  1,  -1, 0,  1,  -1, 1,  1,  1,  0,  0,  -1, 1,  1,  -1, 0,  1,  0,  0,  1,  1,
    1,  1,  0,  0,  -1, 1,  1,  0,  0,  -1, 1,  1,  1,  -1, -1, -1, 0,  1,  0,  -1, 0,  -1, 0,  1,  -1, 1,  -1,
    1,  1,  0,  0,  -1, 1,  1,  1,  1,  1,  1,  -1, 0,  1,  -1, 0,  1,  0,  1,  -1, 0,  1,  -1, 1,  1,  -1, 0,
    -1, -1, -1, 0,  0,  1,  1,  1,  1,  1,  0,  0,  1,  1,  1,  1,  0,  0,  -1, -1, -1, -1, 1,  1,  1,  0,  0,
    -1, 0,  -1, 1,  1,  0,  -1, 1,  0,  1,  -1, 0,  -1, 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0};
#elif defined(FLEX_TRIT_ENCODING_3_TRITS_PER_BYTE)
const flex_trit_t TEST_TX_HASH[] = {69, 79, 79, 68, 67, 80, 75, 57, 72, 80, 68, 77, 79, 89, 87, 89, 82, 90, 83, 57, 83,
                                    89, 76, 73, 69, 90, 73, 69, 84, 86, 81, 66, 74, 73, 67, 81, 74, 75, 86, 85, 77, 82,
                                    86, 67, 76, 68, 70, 65, 75, 80, 72, 88, 72, 84, 68, 70, 77, 86, 85, 67, 89, 71, 89,
                                    78, 73, 77, 65, 77, 65, 78, 75, 65, 81, 68, 66, 89, 90, 57, 57, 57, 57};
#elif defined(FLEX_TRIT_ENCODING_4_TRITS_PER_BYTE)
const flex_trit_t TEST_TX_HASH[] = {31, -49, 23,  68,  127, 1,   83,  95,  84, 124, -13, 52,  -16, 16,  3,   113,
                                    67, 65,  -33, 0,   125, 119, 61,  31,  17, 68,  -52, -47, 85,  -45, 21,  92,
                                    19, 84,  -63, 5,   87,  63,  49,  -45, 93, 112, 85,  77,  19,  77,  -41, -4,
                                    80, 21,  84,  -63, 127, 5,   115, 113, 52, 3,   0,   0,   0};
#elif defined(FLEX_TRIT_ENCODING_5_TRITS_PER_BYTE)
const flex_trit_t TEST_TX_HASH[] = {-76, 44, 28,  43,  -80, -96, 112, 46,   -37, -2,  77,  -3,  -62, 36,  48,  -1, -65,
                                    -47, 44, 30,  30,  17,  115, -56, 13,   -16, 109, -77, -77, -95, -73, -57, 34, 114,
                                    -14, 25, -56, -86, 77,  40,  120, -117, 38,  51,  19,  -29, 0,   0,   0};
#endif

#ifdef __cplusplus
}
#endif

#endif  // __COMMON_STORAGE_TESTS_HELPERS_H__
