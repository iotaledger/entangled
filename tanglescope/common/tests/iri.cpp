#include "tanglescope/common/iri.hpp"
#include <gtest/gtest.h>
#include <chrono>
#include <string>

using namespace iota::tanglescope;

const std::string_view SN_payload(
    "sn 270255 "
    "XMFB9BMKAFZWJ9ZZHFTVOMKJQEJXTNMZALWFSWIRJSMHFFQVOTKN9RALGWWQGQAVNVXDQDHSXP"
    "RJA9999 "
    "WGMJRVFJOOUYOSLCJABVBLWQIGUNZDOYSYVCRDIBD9RLPVGLVNDHDHDQNNVFQIXAXBPSBAJDQO"
    "GYVYKCX "
    "DJBVPUQ9HTCQTLQXMMOLD9RLWHUCMXSDUKDKOSCYNBECNCAQFZJTHSKWTTGWGZPIEMESDHUWIC"
    "GAZ9999 "
    "PHOWHKDLXRONSHDITTZVHAGKSRHZ9MWUSMWKOKPDYQPSUDPOYDDZXDFQHIVWRYY9WWTNJDFAPQ"
    "9WZ9999 "
    "FHLJXGDXBLNUDJFZOZSYONZQJCYIFJWALUZOLKTKYJ9FY9TAPYFJHUDKYWHH9IHEQFVTDJRJU9"
    "JQVXKK9");

const std::string_view TX_payload(
    "tx "
    "FCTUIMMLIDJFOMVPHLWTIWVUYKJINKYIKAI9DUZGJPFSWEYHGQWREXTNJJEDMTYIOYFOTICXGB"
    "FNA9999 "
    "KPWCHICGJZXKE9GSUDXZYUAPLHAKAHYHDXNPHENTERYMMBQOPSQIDENXKLKCEYCPVTZQLEEJVY"
    "JZV9BWU 0 IQTNA9999999999999999999999 1509897914 0 1 "
    "STHTBDTVDYOFVOKVRPGRUVFCLFXEYUZYISBOFZZUEFVSOLDADEKQMRXDBEEXDYEGCCHXXDYUEQ"
    "QVTJSRW "
    "JKOMYKTPKTSUAUQJCRBJ99UEOUHEVSVMORJKCIILJHDPICXTAFQCULGYYFVRREXDJEJIGRGVML"
    "RZZ9999 "
    "VPZTEHURNXLNBNDLJTJCGLIQZWVIQSSFDL9C9GSSULPJZDKWTAHJNRIHRARWELJPLWLIBDQIIR"
    "EBA9999 1509897927055");

TEST(IRITest, SNMessageTest) {
  auto rawmsg = iri::payloadToMsg(SN_payload);
  ASSERT_EQ(iri::IRIMessageType::SN, rawmsg->type());
  auto msg = std::static_pointer_cast<iri::SNMessage>(rawmsg);

  ASSERT_EQ(270255ULL, msg->milestoneIdx());
  ASSERT_STREQ(
      "XMFB9BMKAFZWJ9ZZHFTVOMKJQEJXTNMZALWFSWIRJSMHFFQVOTKN9RALGWWQGQAVNVXDQDHS"
      "XPRJA9999",
      msg->hash().c_str());
  ASSERT_STREQ(
      "WGMJRVFJOOUYOSLCJABVBLWQIGUNZDOYSYVCRDIBD9RLPVGLVNDHDHDQNNVFQIXAXBPSBAJD"
      "QOGYVYKCX",
      msg->address().c_str());
  ASSERT_STREQ(
      "DJBVPUQ9HTCQTLQXMMOLD9RLWHUCMXSDUKDKOSCYNBECNCAQFZJTHSKWTTGWGZPIEMESDHUW"
      "ICGAZ9999",
      msg->trunk().c_str());
  ASSERT_STREQ(
      "PHOWHKDLXRONSHDITTZVHAGKSRHZ9MWUSMWKOKPDYQPSUDPOYDDZXDFQHIVWRYY9WWTNJDFA"
      "PQ9WZ9999",
      msg->branch().c_str());
  ASSERT_STREQ(
      "FHLJXGDXBLNUDJFZOZSYONZQJCYIFJWALUZOLKTKYJ9FY9TAPYFJHUDKYWHH9IHEQFVTDJRJ"
      "U9JQVXKK9",
      msg->bundle().c_str());
}

TEST(IRITest, TXMessageTest) {
  auto rawmsg = iri::payloadToMsg(TX_payload);
  ASSERT_EQ(iri::IRIMessageType::TX, rawmsg->type());
  auto msg = std::static_pointer_cast<iri::TXMessage>(rawmsg);

  ASSERT_STREQ(
      "FCTUIMMLIDJFOMVPHLWTIWVUYKJINKYIKAI9DUZGJPFSWEYHGQWREXTNJJEDMTYIOYFOTICX"
      "GBFNA9999",
      msg->hash().c_str());
  ASSERT_STREQ(
      "KPWCHICGJZXKE9GSUDXZYUAPLHAKAHYHDXNPHENTERYMMBQOPSQIDENXKLKCEYCPVTZQLEEJ"
      "VYJZV9BWU",
      msg->address().c_str());
  ASSERT_EQ(0, msg->value());
  ASSERT_STREQ("IQTNA9999999999999999999999", msg->obsoleteTag().c_str());
  ASSERT_EQ(1509897914000,
            std::chrono::time_point_cast<std::chrono::milliseconds>(msg->timestamp()).time_since_epoch().count());
  ASSERT_EQ(0ULL, msg->currentIndex());
  ASSERT_EQ(1ULL, msg->lastIndex());
  ASSERT_STREQ(
      "STHTBDTVDYOFVOKVRPGRUVFCLFXEYUZYISBOFZZUEFVSOLDADEKQMRXDBEEXDYEGCCHXXDYU"
      "EQQVTJSRW",
      msg->bundle().c_str());
  ASSERT_STREQ(
      "JKOMYKTPKTSUAUQJCRBJ99UEOUHEVSVMORJKCIILJHDPICXTAFQCULGYYFVRREXDJEJIGRGV"
      "MLRZZ9999",
      msg->trunk().c_str());
  ASSERT_STREQ(
      "VPZTEHURNXLNBNDLJTJCGLIQZWVIQSSFDL9C9GSSULPJZDKWTAHJNRIHRARWELJPLWLIBDQI"
      "IREBA9999",
      msg->branch().c_str());
  ASSERT_EQ(1509897927055,
            std::chrono::time_point_cast<std::chrono::milliseconds>(msg->arrivalTime()).time_since_epoch().count());
}
